import { Injectable } from '@angular/core';
import { Observable } from 'rxjs/Observable';
import { BehaviorSubject } from 'rxjs/BehaviorSubject';

import { User } from './models/user';
import { USERS } from './mock-users';

@Injectable()
export class LoginService {
  // TODO - might make sense to move into it's own service a sort of 
  // 'user.service' that contains accessors to user information
  user: BehaviorSubject<string>;

  // TODO: Handle invalid usernames
  getUsers() {
    return Promise.resolve(USERS);
  }

  // eventually the Observable will be generated by the http module
  getUser(name: string) {
    return this.getUsers().then(users => users.find(user => user.login === name));
  }
  
  getUserName(name: string) {
    let currentLogin: string;

    if(this.user !== undefined) {
      this.user.unsubscribe();
    }

    let userName = USERS.filter(user => user.login === name);

    // hard coding - might break if multiple subscriptions
    this.user = new BehaviorSubject<string>('daren');
    return this.user.asObservable();
  }
}